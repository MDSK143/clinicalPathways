import { __decorate } from 'tslib';
import { ɵɵdefineInjectable, Injectable, Component, NgModule } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { BrowserModule } from '@angular/platform-browser';

var NgxLoaderSpinnerService = /** @class */ (function () {
    function NgxLoaderSpinnerService() {
        /**
         * Loading
         */
        this.loading = new BehaviorSubject(false);
    }
    /**
     * Show loader
     */
    NgxLoaderSpinnerService.prototype.show = function () {
        this.loading.next(true);
    };
    /**
     * Hide loader
     */
    NgxLoaderSpinnerService.prototype.hide = function () {
        this.loading.next(false);
    };
    /**
     * Loader status
     */
    NgxLoaderSpinnerService.prototype.loaderStatus = function () {
        return this.loading;
    };
    NgxLoaderSpinnerService.ɵprov = ɵɵdefineInjectable({ factory: function NgxLoaderSpinnerService_Factory() { return new NgxLoaderSpinnerService(); }, token: NgxLoaderSpinnerService, providedIn: "root" });
    NgxLoaderSpinnerService = __decorate([
        Injectable({
            providedIn: 'root'
        })
    ], NgxLoaderSpinnerService);
    return NgxLoaderSpinnerService;
}());

var NgxLoaderSpinnerComponent = /** @class */ (function () {
    function NgxLoaderSpinnerComponent(loader) {
        this.loader = loader;
        /**
         * Loader flag
         */
        this.isLoading = false;
    }
    NgxLoaderSpinnerComponent.prototype.ngOnInit = function () {
        this.getLoaderStatus();
    };
    /**
     * Get loader status
     */
    NgxLoaderSpinnerComponent.prototype.getLoaderStatus = function () {
        var _this = this;
        this.loader
            .loaderStatus()
            .subscribe(function (spinning) {
            setTimeout(function () {
                _this.isLoading = spinning;
            }, 10);
        });
    };
    NgxLoaderSpinnerComponent.ctorParameters = function () { return [
        { type: NgxLoaderSpinnerService }
    ]; };
    NgxLoaderSpinnerComponent = __decorate([
        Component({
            selector: 'ngx-loader-spinner',
            template: "\n  <div *ngIf=\"isLoading\" class=\"loader-wrapper\">\n    <div class=\"loader\">\n      <div class=\"item1\"></div>\n      <div class=\"item2\"></div>\n      <div class=\"item3\"></div>\n    </div>\n  </div>\n  ",
            styles: ["\n    .loader-wrapper {\n      height: 100vh;\n      width: 100vw;\n      background-color: rgba(255, 255, 255, 0.7);\n      position: fixed;\n      z-index: 999;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    .loader > div {\n      width: 18px;\n      height: 18px;\n      background-color: #d35400;\n      border-radius: 100%;\n      display: inline-block;\n      -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;\n      animation: sk-bouncedelay 1.4s infinite ease-in-out both;\n    }\n    .loader .item1 {\n      -webkit-animation-delay: -0.32s;\n      animation-delay: -0.32s;\n    }\n    .loader .item2 {\n      -webkit-animation-delay: -0.16s;\n      animation-delay: -0.16s;\n    }\n\n    @-webkit-keyframes sk-bouncedelay {\n      0%, 80%, 100% { -webkit-transform: scale(0) }\n      40% { -webkit-transform: scale(1.0) }\n    }\n\n    @keyframes sk-bouncedelay {\n      0%, 80%, 100% {\n        -webkit-transform: scale(0);\n        transform: scale(0);\n      } 40% {\n        -webkit-transform: scale(1.0);\n        transform: scale(1.0);\n      }\n    }\n  "]
        })
    ], NgxLoaderSpinnerComponent);
    return NgxLoaderSpinnerComponent;
}());

var NgxLoaderSpinnerModule = /** @class */ (function () {
    function NgxLoaderSpinnerModule() {
    }
    NgxLoaderSpinnerModule = __decorate([
        NgModule({
            declarations: [NgxLoaderSpinnerComponent],
            imports: [
                BrowserModule
            ],
            exports: [NgxLoaderSpinnerComponent]
        })
    ], NgxLoaderSpinnerModule);
    return NgxLoaderSpinnerModule;
}());

/*
 * Public API Surface of ngx-loader-spinner
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgxLoaderSpinnerComponent, NgxLoaderSpinnerModule, NgxLoaderSpinnerService };
//# sourceMappingURL=ngx-loader-spinner.js.map
