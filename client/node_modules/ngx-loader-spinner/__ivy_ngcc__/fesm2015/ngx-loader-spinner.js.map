{"version":3,"file":"ngx-loader-spinner.js","sources":["ngx-loader-spinner/lib/ngx-loader-spinner.service.ts","ngx-loader-spinner/lib/ngx-loader-spinner.component.ts","ngx-loader-spinner/lib/ngx-loader-spinner.module.ts","ngx-loader-spinner/public-api.ts","ngx-loader-spinner/ngx-loader-spinner.ts"],"names":[],"mappings":";;;;;;;;;;;;;IAMa,uBAAuB,GAApC,MAAa,uBAAuB;AAEpC,IAFA;AAAiB;AAAa;AAG1B;AACA,QACM,YAAO,GAA6B,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC;AAEzE,KAoBC;AACA;AAAS;AAAoB;AAAS,IAlBrC,IAAI;AACL,QAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3B,KAAE;AAEH;AACG;AAEH;AAAS,IAAP,IAAI;AACL,QAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5B,KAAE;AAEH;AACG;AAEH;AAAS,IAAP,YAAY;AAAM,QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;AACvB,KAAE;AACF;4HAAA;AACA,0MAAD;AAAC;AA5BY,uBAAuB,qBAHnC,UAAU,CAAC,WACV,lEA8BA,IC8BW,yBAAyB,GAAtC,MAAa,yBAAyB;SD5D1B,EAAE,MAAM,OACnB,CAAC,zBC2DwC,IAOxC,YACU,MAA+B;GDlE9B,uBAAuB,CA2BnC,3BCwCG,QADQ,WAAM,GAAN,MAAM,CAAyB;AAC1C;AAEI;AACS;AAAa,QAPzB,cAAS,GAAG,KAAK,CAAC;AAEpB,KAEO;AAEP,IAAE,QAAQ;AACT,QAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAC1B,KAAE;AAEH;AACG;AAEH;AAAS,IAAC,eAAe;AACxB,QAAG,IAAI,CAAC,MAAM;AACd,aAAQ,YAAY,EAAE;AACtB,aAAQ,SAAS,CAAC,QAAQ;AAC1B,YAAS,UAAU,CAAC;AACpB,gBAAW,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AACrC,aAAU,EAAE,EAAE,CAAC,CAAC;AAChB,SAAQ,CAAC,CAAC;AACV,KAAE;AAEH,CAAC;;;;;;+6CAAA;AACA;AAAoD,YArBjC,uBAAuB;AACxC,EAoBH;AAAC;AA7BY,yBAAyB,qBA7DrC,SAAS,CAAC,xDA0FT,IClFW,sBAAsB,GAAnC,MAAa,sBAAsB;AAAI,CAAA,CAAA;GDPrC,QAAQ,EAAE,oBAAoB,WAC9B,QAAQ,EAAE,rDCMC,sBAAsB,qBAPlC,QAAQ,CAAC,WACR,YAAY,EAAE,CAAC,yBAAyB,CAAC,WACzC;CAAO,EAAE,eACP,aAAa,WACd,WACD,OAAO,EAAE,CAAC,yBAAyB,CAAC,OACrC,CAAC,KACW;wBDEV,oBACQ,vBCHwB,CAAI;;;;;;;;;;;;;;;;;ybDkDpC,QACF,CAAC,KAEW,yBAAyB,CA4BrC;;;;;;;;;;;;iTChFD;AAAC;ACZD;AACC;AACC,GAAC;AACH;ACHA;AACC;AACC,GAAC;AACH;AACA;AACyD","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxLoaderSpinnerService {\n\n  /**\n   * Loading\n   */\n  private loading: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  /**\n   * Show loader\n   */\n  show() {\n    this.loading.next(true);\n  }\n\n  /**\n   * Hide loader\n   */\n  hide() {\n    this.loading.next(false);\n  }\n\n  /**\n   * Loader status\n   */\n  loaderStatus(): Observable<boolean> {\n    return this.loading;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgxLoaderSpinnerService } from './ngx-loader-spinner.service';\n\n@Component({\n  selector: 'ngx-loader-spinner',\n  template: `\n  <div *ngIf=\"isLoading\" class=\"loader-wrapper\">\n    <div class=\"loader\">\n      <div class=\"item1\"></div>\n      <div class=\"item2\"></div>\n      <div class=\"item3\"></div>\n    </div>\n  </div>\n  `,\n  styles: [`\n    .loader-wrapper {\n      height: 100vh;\n      width: 100vw;\n      background-color: rgba(255, 255, 255, 0.7);\n      position: fixed;\n      z-index: 999;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    .loader > div {\n      width: 18px;\n      height: 18px;\n      background-color: #d35400;\n      border-radius: 100%;\n      display: inline-block;\n      -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;\n      animation: sk-bouncedelay 1.4s infinite ease-in-out both;\n    }\n    .loader .item1 {\n      -webkit-animation-delay: -0.32s;\n      animation-delay: -0.32s;\n    }\n    .loader .item2 {\n      -webkit-animation-delay: -0.16s;\n      animation-delay: -0.16s;\n    }\n\n    @-webkit-keyframes sk-bouncedelay {\n      0%, 80%, 100% { -webkit-transform: scale(0) }\n      40% { -webkit-transform: scale(1.0) }\n    }\n\n    @keyframes sk-bouncedelay {\n      0%, 80%, 100% {\n        -webkit-transform: scale(0);\n        transform: scale(0);\n      } 40% {\n        -webkit-transform: scale(1.0);\n        transform: scale(1.0);\n      }\n    }\n  `]\n})\n\nexport class NgxLoaderSpinnerComponent implements OnInit {\n\n  /**\n   * Loader flag\n   */\n  isLoading = false;\n\n  constructor(\n    private loader: NgxLoaderSpinnerService\n  ) { }\n\n  ngOnInit() {\n    this.getLoaderStatus();\n  }\n\n  /**\n   * Get loader status\n   */\n  private getLoaderStatus() {\n    this.loader\n        .loaderStatus()\n        .subscribe(spinning => {\n          setTimeout(() => {\n            this.isLoading = spinning;\n          }, 10);\n        });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxLoaderSpinnerComponent } from './ngx-loader-spinner.component';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  declarations: [NgxLoaderSpinnerComponent],\n  imports: [\n    BrowserModule\n  ],\n  exports: [NgxLoaderSpinnerComponent]\n})\nexport class NgxLoaderSpinnerModule { }\n","/*\n * Public API Surface of ngx-loader-spinner\n */\n\nexport * from './lib/ngx-loader-spinner.service';\nexport * from './lib/ngx-loader-spinner.component';\nexport * from './lib/ngx-loader-spinner.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}