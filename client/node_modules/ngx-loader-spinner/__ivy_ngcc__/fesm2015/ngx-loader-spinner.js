import { __decorate } from 'tslib';
import { ɵɵdefineInjectable, Injectable, Component, NgModule } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { BrowserModule } from '@angular/platform-browser';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function NgxLoaderSpinnerComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1)(1, "div", 2);
    ɵngcc0.ɵɵelement(2, "div", 3)(3, "div", 4)(4, "div", 5);
    ɵngcc0.ɵɵelementEnd()();
} }
let NgxLoaderSpinnerService = class NgxLoaderSpinnerService {
    constructor() {
        /**
         * Loading
         */
        this.loading = new BehaviorSubject(false);
    }
    /**
     * Show loader
     */
    show() {
        this.loading.next(true);
    }
    /**
     * Hide loader
     */
    hide() {
        this.loading.next(false);
    }
    /**
     * Loader status
     */
    loaderStatus() {
        return this.loading;
    }
};
NgxLoaderSpinnerService.ɵfac = function NgxLoaderSpinnerService_Factory(t) { return new (t || NgxLoaderSpinnerService)(); };
NgxLoaderSpinnerService.ɵprov = ɵɵdefineInjectable({ factory: function NgxLoaderSpinnerService_Factory() { return new NgxLoaderSpinnerService(); }, token: NgxLoaderSpinnerService, providedIn: "root" });

let NgxLoaderSpinnerComponent = class NgxLoaderSpinnerComponent {
    constructor(loader) {
        this.loader = loader;
        /**
         * Loader flag
         */
        this.isLoading = false;
    }
    ngOnInit() {
        this.getLoaderStatus();
    }
    /**
     * Get loader status
     */
    getLoaderStatus() {
        this.loader
            .loaderStatus()
            .subscribe(spinning => {
            setTimeout(() => {
                this.isLoading = spinning;
            }, 10);
        });
    }
};
NgxLoaderSpinnerComponent.ɵfac = function NgxLoaderSpinnerComponent_Factory(t) { return new (t || NgxLoaderSpinnerComponent)(ɵngcc0.ɵɵdirectiveInject(NgxLoaderSpinnerService)); };
NgxLoaderSpinnerComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgxLoaderSpinnerComponent, selectors: [["ngx-loader-spinner"]], decls: 1, vars: 1, consts: [["class", "loader-wrapper", 4, "ngIf"], [1, "loader-wrapper"], [1, "loader"], [1, "item1"], [1, "item2"], [1, "item3"]], template: function NgxLoaderSpinnerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NgxLoaderSpinnerComponent_div_0_Template, 5, 0, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.isLoading);
    } }, dependencies: [ɵngcc1.NgIf], styles: [".loader-wrapper[_ngcontent-%COMP%] {\n      height: 100vh;\n      width: 100vw;\n      background-color: rgba(255, 255, 255, 0.7);\n      position: fixed;\n      z-index: 999;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    .loader[_ngcontent-%COMP%]    > div[_ngcontent-%COMP%] {\n      width: 18px;\n      height: 18px;\n      background-color: #d35400;\n      border-radius: 100%;\n      display: inline-block;\n      -webkit-animation: _ngcontent-%COMP%_sk-bouncedelay 1.4s infinite ease-in-out both;\n      animation: _ngcontent-%COMP%_sk-bouncedelay 1.4s infinite ease-in-out both;\n    }\n    .loader[_ngcontent-%COMP%]   .item1[_ngcontent-%COMP%] {\n      -webkit-animation-delay: -0.32s;\n      animation-delay: -0.32s;\n    }\n    .loader[_ngcontent-%COMP%]   .item2[_ngcontent-%COMP%] {\n      -webkit-animation-delay: -0.16s;\n      animation-delay: -0.16s;\n    }\n\n    @-webkit-keyframes _ngcontent-%COMP%_sk-bouncedelay {\n      0%, 80%, 100% { -webkit-transform: scale(0) }\n      40% { -webkit-transform: scale(1.0) }\n    }\n\n    @keyframes _ngcontent-%COMP%_sk-bouncedelay {\n      0%, 80%, 100% {\n        -webkit-transform: scale(0);\n        transform: scale(0);\n      } 40% {\n        -webkit-transform: scale(1.0);\n        transform: scale(1.0);\n      }\n    }"] });
NgxLoaderSpinnerComponent.ctorParameters = () => [
    { type: NgxLoaderSpinnerService }
];

let NgxLoaderSpinnerModule = class NgxLoaderSpinnerModule {
};
NgxLoaderSpinnerModule.ɵfac = function NgxLoaderSpinnerModule_Factory(t) { return new (t || NgxLoaderSpinnerModule)(); };
NgxLoaderSpinnerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxLoaderSpinnerModule });
NgxLoaderSpinnerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [BrowserModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxLoaderSpinnerService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxLoaderSpinnerComponent, [{
        type: Component,
        args: [{ selector: 'ngx-loader-spinner', template: `
  <div *ngIf="isLoading" class="loader-wrapper">
    <div class="loader">
      <div class="item1"></div>
      <div class="item2"></div>
      <div class="item3"></div>
    </div>
  </div>
  `, styles: ["\n    .loader-wrapper {\n      height: 100vh;\n      width: 100vw;\n      background-color: rgba(255, 255, 255, 0.7);\n      position: fixed;\n      z-index: 999;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    .loader > div {\n      width: 18px;\n      height: 18px;\n      background-color: #d35400;\n      border-radius: 100%;\n      display: inline-block;\n      -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;\n      animation: sk-bouncedelay 1.4s infinite ease-in-out both;\n    }\n    .loader .item1 {\n      -webkit-animation-delay: -0.32s;\n      animation-delay: -0.32s;\n    }\n    .loader .item2 {\n      -webkit-animation-delay: -0.16s;\n      animation-delay: -0.16s;\n    }\n\n    @-webkit-keyframes sk-bouncedelay {\n      0%, 80%, 100% { -webkit-transform: scale(0) }\n      40% { -webkit-transform: scale(1.0) }\n    }\n\n    @keyframes sk-bouncedelay {\n      0%, 80%, 100% {\n        -webkit-transform: scale(0);\n        transform: scale(0);\n      } 40% {\n        -webkit-transform: scale(1.0);\n        transform: scale(1.0);\n      }\n    }\n  "] }]
    }], function () { return [{ type: NgxLoaderSpinnerService }]; }, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxLoaderSpinnerModule, [{
        type: NgModule,
        args: [{
                declarations: [NgxLoaderSpinnerComponent],
                imports: [
                    BrowserModule
                ],
                exports: [NgxLoaderSpinnerComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxLoaderSpinnerModule, { declarations: function () { return [NgxLoaderSpinnerComponent]; }, imports: function () { return [BrowserModule]; }, exports: function () { return [NgxLoaderSpinnerComponent]; } }); })();

/*
 * Public API Surface of ngx-loader-spinner
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgxLoaderSpinnerComponent, NgxLoaderSpinnerModule, NgxLoaderSpinnerService };

//# sourceMappingURL=ngx-loader-spinner.js.map