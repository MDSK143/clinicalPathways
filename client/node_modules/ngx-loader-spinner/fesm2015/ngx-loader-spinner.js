import { __decorate } from 'tslib';
import { ɵɵdefineInjectable, Injectable, Component, NgModule } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { BrowserModule } from '@angular/platform-browser';

let NgxLoaderSpinnerService = class NgxLoaderSpinnerService {
    constructor() {
        /**
         * Loading
         */
        this.loading = new BehaviorSubject(false);
    }
    /**
     * Show loader
     */
    show() {
        this.loading.next(true);
    }
    /**
     * Hide loader
     */
    hide() {
        this.loading.next(false);
    }
    /**
     * Loader status
     */
    loaderStatus() {
        return this.loading;
    }
};
NgxLoaderSpinnerService.ɵprov = ɵɵdefineInjectable({ factory: function NgxLoaderSpinnerService_Factory() { return new NgxLoaderSpinnerService(); }, token: NgxLoaderSpinnerService, providedIn: "root" });
NgxLoaderSpinnerService = __decorate([
    Injectable({
        providedIn: 'root'
    })
], NgxLoaderSpinnerService);

let NgxLoaderSpinnerComponent = class NgxLoaderSpinnerComponent {
    constructor(loader) {
        this.loader = loader;
        /**
         * Loader flag
         */
        this.isLoading = false;
    }
    ngOnInit() {
        this.getLoaderStatus();
    }
    /**
     * Get loader status
     */
    getLoaderStatus() {
        this.loader
            .loaderStatus()
            .subscribe(spinning => {
            setTimeout(() => {
                this.isLoading = spinning;
            }, 10);
        });
    }
};
NgxLoaderSpinnerComponent.ctorParameters = () => [
    { type: NgxLoaderSpinnerService }
];
NgxLoaderSpinnerComponent = __decorate([
    Component({
        selector: 'ngx-loader-spinner',
        template: `
  <div *ngIf="isLoading" class="loader-wrapper">
    <div class="loader">
      <div class="item1"></div>
      <div class="item2"></div>
      <div class="item3"></div>
    </div>
  </div>
  `,
        styles: [`
    .loader-wrapper {
      height: 100vh;
      width: 100vw;
      background-color: rgba(255, 255, 255, 0.7);
      position: fixed;
      z-index: 999;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .loader > div {
      width: 18px;
      height: 18px;
      background-color: #d35400;
      border-radius: 100%;
      display: inline-block;
      -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;
      animation: sk-bouncedelay 1.4s infinite ease-in-out both;
    }
    .loader .item1 {
      -webkit-animation-delay: -0.32s;
      animation-delay: -0.32s;
    }
    .loader .item2 {
      -webkit-animation-delay: -0.16s;
      animation-delay: -0.16s;
    }

    @-webkit-keyframes sk-bouncedelay {
      0%, 80%, 100% { -webkit-transform: scale(0) }
      40% { -webkit-transform: scale(1.0) }
    }

    @keyframes sk-bouncedelay {
      0%, 80%, 100% {
        -webkit-transform: scale(0);
        transform: scale(0);
      } 40% {
        -webkit-transform: scale(1.0);
        transform: scale(1.0);
      }
    }
  `]
    })
], NgxLoaderSpinnerComponent);

let NgxLoaderSpinnerModule = class NgxLoaderSpinnerModule {
};
NgxLoaderSpinnerModule = __decorate([
    NgModule({
        declarations: [NgxLoaderSpinnerComponent],
        imports: [
            BrowserModule
        ],
        exports: [NgxLoaderSpinnerComponent]
    })
], NgxLoaderSpinnerModule);

/*
 * Public API Surface of ngx-loader-spinner
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgxLoaderSpinnerComponent, NgxLoaderSpinnerModule, NgxLoaderSpinnerService };
//# sourceMappingURL=ngx-loader-spinner.js.map
