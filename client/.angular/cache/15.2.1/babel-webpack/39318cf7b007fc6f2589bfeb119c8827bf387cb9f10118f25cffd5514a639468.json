{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-loader-spinner\";\nimport * as i2 from \"src/services/user.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../sidebar/sidebar.component\";\nfunction AccountComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1, \"Firstname must meet validation criteria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AccountComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1, \"LastName must meet validation criteria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AccountComponent_span_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1, \"EmailId must meet validation criteria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AccountComponent_span_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1, \"Mobile must meet validation criteria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"input-error\": a0\n  };\n};\nexport class AccountComponent {\n  constructor(spinnerService, userService) {\n    this.spinnerService = spinnerService;\n    this.userService = userService;\n    this.fullName = '';\n    this.emailId = '';\n    this.accountForm = new FormGroup({\n      firstName: new FormControl(null, [Validators.required]),\n      lastName: new FormControl(null, [Validators.required]),\n      mobile: new FormControl(null, [Validators.required]),\n      emailId: new FormControl(null, [Validators.required])\n    });\n    this.errorMessageOnUpdateUser = '';\n    this.successMessageOnUpdateUser = '';\n    this.alertHeadingOnUpdateUser = '';\n    this.successOnUpdateUser = false;\n    this.onLoadOnUpdateUser = true;\n  }\n  ngOnInit() {\n    this.getUserByQuery();\n  }\n  getUserByQuery() {\n    this.spinnerService.show();\n    try {\n      this.userService.getUserbyQuery(`_id=${localStorage.getItem('userId')}`).subscribe(response => {\n        console.log(`User Data: ${JSON.stringify(response)}`);\n        this.accountForm.patchValue({\n          firstName: response.body[0].firstName,\n          lastName: response.body[0].lastName,\n          emailId: response.body[0].emailId,\n          mobile: response.body[0].mobile\n        });\n        this.fullName = response.body[0].firstName + ' ' + response.body[0].lastName;\n        this.emailId = response.body[0].emailId;\n      }, err => {\n        console.error(`Error [getUser]:  , ${JSON.stringify(err.error)}`);\n        this.spinnerService.hide();\n      });\n    } catch (err) {\n      console.error(`Error [getUser]:  , ${JSON.stringify(err)}`);\n      this.spinnerService.hide();\n    }\n  }\n  saveUser() {\n    this.onLoadOnUpdateUser = false;\n    this.spinnerService.show();\n    try {\n      this.userService.updateUser(this.accountForm.value).subscribe(response => {\n        this.s = true;\n        this.alertHeadingOnupdateUser = response.message;\n        setTimeout(() => {\n          this.spinnerService.hide();\n        }, 1500);\n      }, err => {\n        console.error(`Error [saveUser]:  , ${JSON.stringify(err.error)}`);\n        this.alertHeadingOnupdateUser = err.error.message;\n        this.errorMessageOnupdateUser = err.error.body;\n        this.spinnerService.hide();\n      });\n    } catch (err) {\n      console.error(`Error [saveUser]:  , ${JSON.stringify(err)}`);\n      this.alertHeadingOnupdateUser = err.error.message;\n      this.errorMessageOnupdateUser = err.error.body;\n      this.spinnerService.hide();\n    }\n  }\n}\nAccountComponent.ɵfac = function AccountComponent_Factory(t) {\n  return new (t || AccountComponent)(i0.ɵɵdirectiveInject(i1.NgxLoaderSpinnerService), i0.ɵɵdirectiveInject(i2.UserService));\n};\nAccountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountComponent,\n  selectors: [[\"app-account\"]],\n  decls: 38,\n  vars: 20,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-9\", \"col-lg-10\", \"ml-md-auto\", \"px-0\"], [1, \"container-fluid\", \"dashboard\"], [1, \"jumbotron\", \"jumbotron-fluid\", \"rounded\", \"bg-white\", \"border-0\", \"shadow-sm\", \"border-left\", \"px-4\"], [1, \"container\"], [1, \"container\", \"rounded\", \"bg-white\", \"mt-5\", \"mb-5\"], [1, \"col-md-3\", \"border-right\"], [1, \"d-flex\", \"flex-column\", \"align-items-center\", \"text-center\", \"p-3\", \"py-5\"], [\"width\", \"150px\", \"src\", \"https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg\", 1, \"rounded-circle\", \"mt-5\"], [1, \"font-weight-bold\"], [1, \"text-black-50\"], [1, \"col-md-8\", \"border-right\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mb-3\"], [1, \"text-right\"], [3, \"formGroup\"], [1, \"row\", \"g-3\"], [1, \"col-xl-12\"], [\"type\", \"text\", \"placeholder\", \"First Name\", \"formControlName\", \"firstName\", 1, \"form-control\", \"bg-light\", \"border-0\", 2, \"height\", \"55px\", 3, \"ngClass\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"col-12\"], [\"type\", \"email\", \"placeholder\", \"Last Name\", \"formControlName\", \"lastName\", 1, \"form-control\", \"bg-light\", \"border-0\", 2, \"height\", \"55px\", 3, \"ngClass\"], [\"type\", \"email\", \"placeholder\", \"Email ID\", \"formControlName\", \"emailId\", 1, \"form-control\", \"bg-light\", \"border-0\", 2, \"height\", \"55px\", 3, \"ngClass\"], [\"type\", \"text\", \"placeholder\", \"Mobile\", \"formControlName\", \"mobile\", 1, \"form-control\", \"bg-light\", \"border-0\", 2, \"height\", \"55px\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-dark\", \"w-100\", \"py-3\", 3, \"disabled\"], [1, \"text-danger\"]],\n  template: function AccountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"app-sidebar\");\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"main\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 1)(9, \"div\", 7)(10, \"div\", 8);\n      i0.ɵɵelement(11, \"img\", 9);\n      i0.ɵɵelementStart(12, \"span\", 10);\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"span\", 11);\n      i0.ɵɵtext(15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"span\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 12)(18, \"div\", 13)(19, \"h4\", 14);\n      i0.ɵɵtext(20, \"Profile Settings\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"form\", 15)(22, \"div\", 16)(23, \"div\", 17);\n      i0.ɵɵelement(24, \"input\", 18);\n      i0.ɵɵtemplate(25, AccountComponent_span_25_Template, 2, 0, \"span\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 20);\n      i0.ɵɵelement(27, \"input\", 21);\n      i0.ɵɵtemplate(28, AccountComponent_span_28_Template, 2, 0, \"span\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 20);\n      i0.ɵɵelement(30, \"input\", 22);\n      i0.ɵɵtemplate(31, AccountComponent_span_31_Template, 2, 0, \"span\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\", 17);\n      i0.ɵɵelement(33, \"input\", 23);\n      i0.ɵɵtemplate(34, AccountComponent_span_34_Template, 2, 0, \"span\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 20)(36, \"button\", 24);\n      i0.ɵɵtext(37, \" Update \");\n      i0.ɵɵelementEnd()()()()()()()()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      let tmp_6_0;\n      let tmp_7_0;\n      let tmp_8_0;\n      let tmp_9_0;\n      let tmp_10_0;\n      i0.ɵɵadvance(13);\n      i0.ɵɵtextInterpolate(ctx.fullName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.emailId);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.accountForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, (((tmp_3_0 = ctx.accountForm.get(\"firstName\")) == null ? null : tmp_3_0.dirty) || ((tmp_3_0 = ctx.accountForm.get(\"firstName\")) == null ? null : tmp_3_0.touched)) && ((tmp_3_0 = ctx.accountForm.get(\"firstName\")) == null ? null : tmp_3_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (((tmp_4_0 = ctx.accountForm.get(\"firstName\")) == null ? null : tmp_4_0.dirty) || ((tmp_4_0 = ctx.accountForm.get(\"firstName\")) == null ? null : tmp_4_0.touched)) && ctx.accountForm.get(\"firstName\").invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, (((tmp_5_0 = ctx.accountForm.get(\"lastName\")) == null ? null : tmp_5_0.dirty) || ((tmp_5_0 = ctx.accountForm.get(\"lastName\")) == null ? null : tmp_5_0.touched)) && ((tmp_5_0 = ctx.accountForm.get(\"lastName\")) == null ? null : tmp_5_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (((tmp_6_0 = ctx.accountForm.get(\"lastName\")) == null ? null : tmp_6_0.dirty) || ((tmp_6_0 = ctx.accountForm.get(\"lastName\")) == null ? null : tmp_6_0.touched)) && ctx.accountForm.get(\"lastName\").invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, (((tmp_7_0 = ctx.accountForm.get(\"emailId\")) == null ? null : tmp_7_0.dirty) || ((tmp_7_0 = ctx.accountForm.get(\"emailId\")) == null ? null : tmp_7_0.touched)) && ((tmp_7_0 = ctx.accountForm.get(\"emailId\")) == null ? null : tmp_7_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (((tmp_8_0 = ctx.accountForm.get(\"emailId\")) == null ? null : tmp_8_0.dirty) || ((tmp_8_0 = ctx.accountForm.get(\"emailId\")) == null ? null : tmp_8_0.touched)) && ctx.accountForm.get(\"emailId\").invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, (((tmp_9_0 = ctx.accountForm.get(\"mobile\")) == null ? null : tmp_9_0.dirty) || ((tmp_9_0 = ctx.accountForm.get(\"mobile\")) == null ? null : tmp_9_0.touched)) && ((tmp_9_0 = ctx.accountForm.get(\"mobile\")) == null ? null : tmp_9_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (((tmp_10_0 = ctx.accountForm.get(\"mobile\")) == null ? null : tmp_10_0.dirty) || ((tmp_10_0 = ctx.accountForm.get(\"mobile\")) == null ? null : tmp_10_0.touched)) && ctx.accountForm.get(\"mobile\").invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.accountForm.invalid);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.SidebarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","AccountComponent","constructor","spinnerService","userService","firstName","required","lastName","mobile","emailId","ngOnInit","getUserByQuery","show","getUserbyQuery","localStorage","getItem","subscribe","response","console","log","JSON","stringify","accountForm","patchValue","body","fullName","err","error","hide","saveUser","onLoadOnUpdateUser","updateUser","value","s","alertHeadingOnupdateUser","message","setTimeout","errorMessageOnupdateUser","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\LENOVO\\Desktop\\clinicalPathways-angular\\client\\src\\components\\account\\account.component.ts","C:\\Users\\LENOVO\\Desktop\\clinicalPathways-angular\\client\\src\\components\\account\\account.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgxLoaderSpinnerService } from 'ngx-loader-spinner';\nimport { UserService } from 'src/services/user.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css'],\n})\nexport class AccountComponent {\n  fullName: string = '';\n  emailId: any = '';\n\n  constructor(\n    private spinnerService: NgxLoaderSpinnerService,\n    private userService: UserService\n  ) {}\n\n  accountForm = new FormGroup({\n    firstName: new FormControl(null, [Validators.required]),\n    lastName: new FormControl(null, [Validators.required]),\n    mobile: new FormControl(null, [Validators.required]),\n    emailId: new FormControl(null, [Validators.required]),\n  });\n\n  errorMessageOnUpdateUser: string = '';\n  successMessageOnUpdateUser: string = '';\n  alertHeadingOnUpdateUser: string = '';\n  successOnUpdateUser: boolean = false;\n  onLoadOnUpdateUser: boolean = true;\n\n  ngOnInit() {\n    this.getUserByQuery();\n  }\n\n  getUserByQuery() {\n    this.spinnerService.show();\n    try {\n      this.userService\n        .getUserbyQuery(`_id=${localStorage.getItem('userId')}`)\n        .subscribe(\n          (response: any) => {\n            console.log(`User Data: ${JSON.stringify(response)}`);\n            this.accountForm.patchValue({\n              firstName: response.body[0].firstName,\n              lastName: response.body[0].lastName,\n              emailId: response.body[0].emailId,\n              mobile: response.body[0].mobile,\n            });\n            this.fullName =\n              response.body[0].firstName + ' ' + response.body[0].lastName;\n            this.emailId = response.body[0].emailId;\n          },\n          (err: any) => {\n            console.error(`Error [getUser]:  , ${JSON.stringify(err.error)}`);\n            this.spinnerService.hide();\n          }\n        );\n    } catch (err: any) {\n      console.error(`Error [getUser]:  , ${JSON.stringify(err)}`);\n      this.spinnerService.hide();\n    }\n  }\n\n  saveUser() {\n    this.onLoadOnUpdateUser = false;\n    this.spinnerService.show();\n    try {\n      this.userService.updateUser(this.accountForm.value).subscribe(\n        (response: any) => {\n          this.s = true;\n          this.alertHeadingOnupdateUser = response.message;\n          setTimeout(() => {\n            this.spinnerService.hide();\n          }, 1500);\n        },\n        (err: any) => {\n          console.error(`Error [saveUser]:  , ${JSON.stringify(err.error)}`);\n          this.alertHeadingOnupdateUser = err.error.message;\n          this.errorMessageOnupdateUser = err.error.body;\n          this.spinnerService.hide();\n        }\n      );\n    } catch (err: any) {\n      console.error(`Error [saveUser]:  , ${JSON.stringify(err)}`);\n      this.alertHeadingOnupdateUser = err.error.message;\n      this.errorMessageOnupdateUser = err.error.body;\n      this.spinnerService.hide();\n    }\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <app-sidebar></app-sidebar>\n    <div class=\"col-md-9 col-lg-10 ml-md-auto px-0\">\n      <!-- main content -->\n      <main class=\"container-fluid dashboard\">\n        <div\n          class=\"jumbotron jumbotron-fluid rounded bg-white border-0 shadow-sm border-left px-4\"\n        >\n          <div class=\"container\">\n            <div class=\"container rounded bg-white mt-5 mb-5\">\n              <div class=\"row\">\n                <div class=\"col-md-3 border-right\">\n                  <div\n                    class=\"d-flex flex-column align-items-center text-center p-3 py-5\"\n                  >\n                    <img\n                      class=\"rounded-circle mt-5\"\n                      width=\"150px\"\n                      src=\"https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg\"\n                    /><span class=\"font-weight-bold\">{{fullName}}</span\n                    ><span class=\"text-black-50\">{{emailId}}</span\n                    ><span> </span>\n                  </div>\n                </div>\n                <div class=\"col-md-8 border-right\">\n                  <div\n                    class=\"d-flex justify-content-between align-items-center mb-3\"\n                  >\n                    <h4 class=\"text-right\">Profile Settings</h4>\n                  </div>\n                  <form [formGroup]=\"accountForm\">\n                    <div class=\"row g-3\">\n                      <div class=\"col-xl-12\">\n                        <input\n                          type=\"text\"\n                          class=\"form-control bg-light border-0\"\n                          placeholder=\"First Name\"\n                          formControlName=\"firstName\"\n                          style=\"height: 55px\"\n                          [ngClass]=\"{\n                            'input-error':\n                              (accountForm.get('firstName')?.dirty ||\n                                accountForm.get('firstName')?.touched) &&\n                              accountForm.get('firstName')?.invalid\n                          }\"\n                        />\n                        <span\n                          class=\"text-danger\"\n                          *ngIf=\"\n                            (accountForm.get('firstName')?.dirty ||\n                              accountForm.get('firstName')?.touched) &&\n                            accountForm.get('firstName')!.invalid\n                          \"\n                          >Firstname must meet validation criteria.\n                        </span>\n                      </div>\n                      <div class=\"col-12\">\n                        <input\n                          type=\"email\"\n                          class=\"form-control bg-light border-0\"\n                          placeholder=\"Last Name\"\n                          style=\"height: 55px\"\n                          formControlName=\"lastName\"\n                          [ngClass]=\"{\n                            'input-error':\n                              (accountForm.get('lastName')?.dirty ||\n                                accountForm.get('lastName')?.touched) &&\n                              accountForm.get('lastName')?.invalid\n                          }\"\n                        />\n                        <span\n                          class=\"text-danger\"\n                          *ngIf=\"\n                            (accountForm.get('lastName')?.dirty ||\n                              accountForm.get('lastName')?.touched) &&\n                            accountForm.get('lastName')!.invalid\n                          \"\n                          >LastName must meet validation criteria.\n                        </span>\n                      </div>\n                      <div class=\"col-12\">\n                        <input\n                          type=\"email\"\n                          class=\"form-control bg-light border-0\"\n                          placeholder=\"Email ID\"\n                          style=\"height: 55px\"\n                          formControlName=\"emailId\"\n                          [ngClass]=\"{\n                            'input-error':\n                              (accountForm.get('emailId')?.dirty ||\n                                accountForm.get('emailId')?.touched) &&\n                              accountForm.get('emailId')?.invalid\n                          }\"\n                        />\n                        <span\n                          class=\"text-danger\"\n                          *ngIf=\"\n                            (accountForm.get('emailId')?.dirty ||\n                              accountForm.get('emailId')?.touched) &&\n                            accountForm.get('emailId')!.invalid\n                          \"\n                          >EmailId must meet validation criteria.\n                        </span>\n                      </div>\n                      <div class=\"col-xl-12\">\n                        <input\n                          type=\"text\"\n                          class=\"form-control bg-light border-0\"\n                          placeholder=\"Mobile\"\n                          style=\"height: 55px\"\n                          formControlName=\"mobile\"\n                          [ngClass]=\"{\n                            'input-error':\n                              (accountForm.get('mobile')?.dirty ||\n                                accountForm.get('mobile')?.touched) &&\n                              accountForm.get('mobile')?.invalid\n                          }\"\n                        />\n                        <span\n                          class=\"text-danger\"\n                          *ngIf=\"\n                            (accountForm.get('mobile')?.dirty ||\n                              accountForm.get('mobile')?.touched) &&\n                            accountForm.get('mobile')!.invalid\n                          \"\n                          >Mobile must meet validation criteria.\n                        </span>\n                      </div>\n\n                      <div class=\"col-12\">\n                        <button\n                          class=\"btn btn-dark w-100 py-3\"\n                          type=\"submit\"\n                          [disabled]=\"accountForm.invalid\"\n                        >\n                          Update\n                        </button>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}