{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet AuthGuard = class AuthGuard {\n  constructor(userService, router) {\n    this.userService = userService;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    alert(localStorage.getItem('isAuthenticated'));\n    if (localStorage.getItem('isAuthenticated') == 'true') return true;else {\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n};\nAuthGuard = __decorate([Injectable()], AuthGuard);\nexport { AuthGuard };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAWnC,IAAMC,SAAS,GAAf,MAAMA,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EACvEC,WAAW,CACTC,IAA4B,EAC5BC,KAA0B;IAM1BC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAC9C,IAAID,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,IAAI,MAAM,EAAE,OAAO,IAAI,CAAC,KAC9D;MACH,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC3B,OAAO,KAAK;;EAEhB;CACD;AAjBYV,SAAS,eADrBD,UAAU,EAAE,GACAC,SAAS,CAiBrB;SAjBYA,SAAS","names":["Injectable","AuthGuard","constructor","userService","router","canActivate","next","state","alert","localStorage","getItem","navigate"],"sourceRoot":"","sources":["C:\\Users\\LENOVO\\Desktop\\clinicalPathways-angular\\client\\src\\services\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private userService: UserService, private router: Router) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    alert(localStorage.getItem('isAuthenticated'));\n    if (localStorage.getItem('isAuthenticated') == 'true') return true;\n    else {\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}