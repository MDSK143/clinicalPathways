{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { url } from '../../src/config/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  // Create a new user\n  saveUser(userData) {\n    console.log(`userData: ${JSON.stringify(userData)}`);\n    return this.http.post(url.domainurl + `users`, userData);\n  }\n  //Login\n  login(loginData) {\n    console.log(`loginData: ${JSON.stringify(loginData)}`);\n    return this.http.post(url.domainurl + `auth/login`, loginData).pipe(map(data => {\n      alert(data['message']);\n      if (data['message'] == 'Login successful') localStorage.setItem('isAuthenticated', 'true');else localStorage.setItem('isAuthenticated', 'false');\n      return data;\n    }));\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,SAASC,GAAG,QAAQ,4BAA4B;;;AAKhD,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvC;EACAC,QAAQ,CAACC,QAAa;IACpBC,OAAO,CAACC,GAAG,CAAC,aAAaC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,EAAE,CAAC;IACpD,OAAO,IAAI,CAACF,IAAI,CAACO,IAAI,CAACV,GAAG,CAACW,SAAS,GAAG,OAAO,EAAEN,QAAQ,CAAC;EAC1D;EAEA;EACAO,KAAK,CAACC,SAAc;IAClBP,OAAO,CAACC,GAAG,CAAC,cAAcC,IAAI,CAACC,SAAS,CAACI,SAAS,CAAC,EAAE,CAAC;IACtD,OAAO,IAAI,CAACV,IAAI,CAACO,IAAI,CAACV,GAAG,CAACW,SAAS,GAAG,YAAY,EAAEE,SAAS,CAAC,CAACC,IAAI,CACjEf,GAAG,CAAEgB,IAAS,IAAI;MAChBC,KAAK,CAACD,IAAI,CAAC,SAAS,CAAC,CAAC;MACtB,IAAIA,IAAI,CAAC,SAAS,CAAC,IAAI,kBAAkB,EACvCE,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC,KAC7CD,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC;MACrD,OAAOH,IAAI;IACb,CAAC,CAAC,CACH;EACH;;AArBWd,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFV;AAAM","names":["map","url","UserService","constructor","http","saveUser","userData","console","log","JSON","stringify","post","domainurl","login","loginData","pipe","data","alert","localStorage","setItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\LENOVO\\Desktop\\clinicalPathways-angular\\client\\src\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { url } from '../../src/config/constants';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  // Create a new user\n  saveUser(userData: any): Observable<any> {\n    console.log(`userData: ${JSON.stringify(userData)}`);\n    return this.http.post(url.domainurl + `users`, userData);\n  }\n\n  //Login\n  login(loginData: any): Observable<any> {\n    console.log(`loginData: ${JSON.stringify(loginData)}`);\n    return this.http.post(url.domainurl + `auth/login`, loginData).pipe(\n      map((data: any) => {\n        alert(data['message']);\n        if (data['message'] == 'Login successful')\n          localStorage.setItem('isAuthenticated', 'true');\n        else localStorage.setItem('isAuthenticated', 'false');\n        return data;\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}