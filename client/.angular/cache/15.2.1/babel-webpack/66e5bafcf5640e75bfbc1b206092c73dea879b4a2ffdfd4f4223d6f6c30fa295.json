{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet AuthGuard = class AuthGuard {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  canActivate(next, state) {\n    if (this.authService.isAuthenticate) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\nAuthGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthGuard);\nexport { AuthGuard };","map":{"version":3,"mappings":";AACA,SAASA,UAAU,QAAQ,eAAe;AAOnC,IAAMC,SAAS,GAAf,MAAMA,SAAS;EACpBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAAiB;EAEhDC,WAAW,CAACC,IAA4B,EAAEC,KAA0B;IAElE,IAAI,IAAI,CAACH,WAAW,CAACI,cAAc,EAAE;MACnC,OAAO,IAAI;KACZ,MAAM;MACL,OAAO,KAAK;;EAEhB;CAAC;AAVUN,SAAS,eAHrBD,UAAU,CAAC;EACVQ,UAAU,EAAE;CACb,CAAC,GACWP,SAAS,CAUnB;SAVUA,SAAS","names":["Injectable","AuthGuard","constructor","authService","canActivate","next","state","isAuthenticate","providedIn"],"sourceRoot":"","sources":["C:\\Users\\LENOVO\\Desktop\\clinicalPathways-angular\\client\\src\\services\\auth.guard.ts"],"sourcesContent":["import { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService) { }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n    : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authService.isAuthenticate) {\n      return true;\n    } else {\n      return false;\n    }\n  }"]},"metadata":{},"sourceType":"module","externalDependencies":[]}