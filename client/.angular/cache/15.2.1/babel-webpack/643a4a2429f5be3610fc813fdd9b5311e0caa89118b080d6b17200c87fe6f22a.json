{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(next, state) {\n    alert(localStorage.getItem('isAuthenticated'));\n    if (localStorage.getItem('isAuthenticated') == 'true') return true;else {\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac\n});","map":{"version":3,"mappings":";;AAWA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAW;EACrCC,WAAW,CACTC,IAA4B,EAC5BC,KAA0B;IAM1BC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAC9C,IAAID,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,IAAI,MAAM,EAAE,OAAO,IAAI,CAAC,KAC9D;MACH,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC3B,OAAO,KAAK;;EAEhB;;AAhBWT,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAU,SAATV,SAAS;AAAA","names":["AuthGuard","constructor","router","canActivate","next","state","alert","localStorage","getItem","navigate","factory"],"sourceRoot":"","sources":["C:\\Users\\LENOVO\\Desktop\\clinicalPathways-angular\\client\\src\\services\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    alert(localStorage.getItem('isAuthenticated'));\n    if (localStorage.getItem('isAuthenticated') == 'true') return true;\n    else {\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}