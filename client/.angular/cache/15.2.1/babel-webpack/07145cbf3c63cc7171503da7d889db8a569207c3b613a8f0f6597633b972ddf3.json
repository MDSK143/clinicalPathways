{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-loader-spinner\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/services/user.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction DashboardComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 42);\n    i0.ɵɵtext(1, \"Firstname must meet validation criteria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_span_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 42);\n    i0.ɵɵtext(1, \"Lastname must meet validation criteria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_span_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 42);\n    i0.ɵɵtext(1, \"EmailId must meet validation criteria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_span_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 42);\n    i0.ɵɵtext(1, \"Mobile must meet validation criteria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_span_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 42);\n    i0.ɵɵtext(1, \"Username must meet validation criteria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_span_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 42);\n    i0.ɵɵtext(1, \"Password must meet validation criteria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_span_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 42);\n    i0.ɵɵtext(1, \"Confirm Password must meet validation criteria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r7.alertHeadingOnsignUp, \"! \", ctx_r7.successMessageOnsignUp, \"\");\n  }\n}\nfunction DashboardComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r8.alertHeadingOnsignUp, \"! \", ctx_r8.errorMessageOnsignUp, \"\");\n  }\n}\nfunction DashboardComponent_span_63_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 42);\n    i0.ɵɵtext(1, \"Username must meet validation criteria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_span_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 42);\n    i0.ɵɵtext(1, \"Password must meet validation criteria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_67_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r11.alertHeading, \"! \", ctx_r11.successMessage, \"\");\n  }\n}\nfunction DashboardComponent_div_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r12.alertHeading, \"! \", ctx_r12.errorMessage, \"\");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"input-error\": a0\n  };\n};\nexport class DashboardComponent {\n  constructor(spinnerService, router, userService) {\n    this.spinnerService = spinnerService;\n    this.router = router;\n    this.userService = userService;\n    this.loginForm = new FormGroup({\n      userName: new FormControl(null, [Validators.required]),\n      password: new FormControl(null, [Validators.required])\n    });\n    this.signUpForm = new FormGroup({\n      firstName: new FormControl(null, [Validators.required]),\n      lastName: new FormControl(null, [Validators.required]),\n      mobile: new FormControl(null, [Validators.required]),\n      emailId: new FormControl(null, [Validators.required]),\n      userName: new FormControl(null, [Validators.required]),\n      password: new FormControl(null, [Validators.required]),\n      confirmPassword: new FormControl(null, [Validators.required])\n    });\n    this.errorMessage = '';\n    this.successMessage = '';\n    this.alertHeading = '';\n    this.success = false;\n    this.errorMessageOnsignUp = '';\n    this.successMessageOnsignUp = '';\n    this.alertHeadingOnsignUp = '';\n    this.successOnsignUp = false;\n    this.onLoad = true;\n    this.onLoadOnsignUp = true;\n    this.isLoggedIn = localStorage.getItem('isAuthenticated');\n  }\n  ngOnInit() {}\n  // login\n  login() {\n    this.onLoad = false;\n    try {\n      this.spinnerService.show();\n      this.userService.login(this.loginForm.value).subscribe(response => {\n        this.success = true;\n        this.alertHeading = response.message;\n        setTimeout(() => {\n          this.errorMessage = '';\n          this.successMessage = '';\n          this.alertHeading = '';\n          this.success = false;\n          this.onLoad = true;\n        }, 3000);\n        setTimeout(() => {\n          $('#loginModal').modal('hide');\n          this.router.navigate(['/inner-dashboard']);\n          this.spinnerService.hide();\n        }, 1500);\n      }, err => {\n        console.error(`Error [login]:  , ${JSON.stringify(err.error)}`);\n        this.alertHeading = err.error.message;\n        this.errorMessage = err.error.body;\n        this.spinnerService.hide();\n      });\n    } catch (err) {\n      console.error(`Error [login]:  , ${JSON.stringify(err)}`);\n      this.alertHeading = err.error.message;\n      this.errorMessage = err.error.body;\n      this.spinnerService.hide();\n    }\n  }\n  // Signup and create a user\n  saveUser() {\n    this.onLoadOnsignUp = false;\n    this.spinnerService.show();\n    try {\n      this.userService.saveUser([this.signUpForm.value]).subscribe(response => {\n        this.successOnsignUp = true;\n        this.alertHeadingOnsignUp = response.message;\n        setTimeout(() => {\n          this.errorMessageOnsignUp = '';\n          this.successMessageOnsignUp = '';\n          this.alertHeadingOnsignUp = '';\n          this.successOnsignUp = false;\n          this.onLoadOnsignUp = true;\n        }, 3000);\n        setTimeout(() => {\n          $('#signUpModal').modal('hide');\n          this.spinnerService.hide();\n        }, 1500);\n      }, err => {\n        console.error(`Error [saveUser]:  , ${JSON.stringify(err.error)}`);\n        this.alertHeadingOnsignUp = err.error.message;\n        this.errorMessageOnsignUp = err.error.body;\n        this.spinnerService.hide();\n      });\n    } catch (err) {\n      console.error(`Error [saveUser]:  , ${JSON.stringify(err)}`);\n      this.alertHeadingOnsignUp = err.error.message;\n      this.errorMessageOnsignUp = err.error.body;\n      this.spinnerService.hide();\n    }\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.NgxLoaderSpinnerService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 82,\n  vars: 44,\n  consts: [[\"id\", \"home\", \"data-bs-ride\", \"carousel\", 1, \"carousel\", \"slide\", \"carousel-fade\"], [1, \"carousel-inner\"], [1, \"carousel-item\", \"active\"], [\"src\", \"assets/img/carousel-1.jpg\", \"alt\", \"Image\", 1, \"w-100\"], [1, \"carousel-caption\", \"d-flex\", \"flex-column\", \"align-items-center\", \"justify-content-center\"], [1, \"p-3\", 2, \"max-width\", \"900px\"], [1, \"text-white\", \"text-uppercase\", \"mb-3\", \"animated\", \"slideInDown\"], [1, \"display-1\", \"text-white\", \"mb-md-4\", \"animated\", \"zoomIn\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#loginModal\", 1, \"btn\", \"btn-primary\", \"py-md-3\", \"px-md-5\", \"me-3\", \"animated\", \"slideInLeft\"], [1, \"fa\", \"fa-user\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#signUpModal\", 1, \"btn\", \"btn-outline-light\", \"py-md-3\", \"px-md-5\", \"animated\", \"slideInRight\"], [\"id\", \"signUpModal\", \"role\", \"dialog\", 1, \"modal\"], [\"data-wow-delay\", \"0.1s\", 1, \"modal-dialog\", \"modal-lg\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-center\"], [\"src\", \"assets/img/logo.png\", 2, \"height\", \"15%\", \"width\", \"15%\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"row\", \"g-3\"], [1, \"col-xl-12\"], [\"type\", \"text\", \"placeholder\", \"First Name *\", \"formControlName\", \"firstName\", 1, \"form-control\", \"bg-light\", \"border-0\", 2, \"height\", \"55px\", 3, \"ngClass\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"col-12\"], [\"type\", \"email\", \"placeholder\", \"Last Name *\", \"formControlName\", \"lastName\", 1, \"form-control\", \"bg-light\", \"border-0\", 2, \"height\", \"55px\", 3, \"ngClass\"], [\"type\", \"email\", \"placeholder\", \"Email ID *\", \"formControlName\", \"emailId\", 1, \"form-control\", \"bg-light\", \"border-0\", 2, \"height\", \"55px\", 3, \"ngClass\"], [\"type\", \"text\", \"placeholder\", \"Mobile *\", \"formControlName\", \"mobile\", 1, \"form-control\", \"bg-light\", \"border-0\", 2, \"height\", \"55px\", 3, \"ngClass\"], [\"type\", \"text\", \"placeholder\", \"Username *\", \"formControlName\", \"userName\", 1, \"form-control\", \"bg-light\", \"border-0\", 2, \"height\", \"55px\", 3, \"ngClass\"], [\"type\", \"email\", \"placeholder\", \"Password *\", \"formControlName\", \"password\", 1, \"form-control\", \"bg-light\", \"border-0\", 2, \"height\", \"55px\", 3, \"ngClass\"], [\"type\", \"text\", \"placeholder\", \"Confirm Password *\", \"formControlName\", \"confirmPassword\", 1, \"form-control\", \"bg-light\", \"border-0\", 2, \"height\", \"55px\", 3, \"ngClass\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-dark\", \"w-100\", \"py-3\", 3, \"disabled\", \"click\"], [1, \"modal-footer\"], [\"id\", \"loginModal\", \"role\", \"dialog\", 1, \"modal\"], [\"type\", \"password\", \"placeholder\", \"Password *\", \"formControlName\", \"password\", 1, \"form-control\", \"bg-light\", \"border-0\", 2, \"height\", \"55px\", 3, \"ngClass\"], [1, \"btn\", \"btn-dark\", \"w-100\", \"py-3\", 3, \"disabled\", \"click\"], [1, \"text-center\", 2, \"font-weight\", \"bold\"], [1, \"text-center\", \"mb-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-link\", \"btn-floating\", \"mx-1\"], [1, \"fab\", \"fa-google\"], [1, \"fab\", \"fa-apple\"], [1, \"text-danger\"], [1, \"alert\", \"alert-success\"], [1, \"alert\", \"alert-danger\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"img\", 3);\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"h5\", 6);\n      i0.ɵɵtext(7, \" Clinical pathways \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"h1\", 7);\n      i0.ɵɵtext(9, \" Coming Soon! \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"a\", 8);\n      i0.ɵɵelement(11, \"i\", 9);\n      i0.ɵɵtext(12, \" Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"a\", 10);\n      i0.ɵɵtext(14, \" Sign up\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(15, \"div\", 11)(16, \"div\", 12)(17, \"div\", 13)(18, \"div\", 14)(19, \"h1\", 15);\n      i0.ɵɵelement(20, \"img\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 17)(22, \"form\", 18)(23, \"div\", 19)(24, \"div\", 20);\n      i0.ɵɵelement(25, \"input\", 21);\n      i0.ɵɵtemplate(26, DashboardComponent_span_26_Template, 2, 0, \"span\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 23);\n      i0.ɵɵelement(28, \"input\", 24);\n      i0.ɵɵtemplate(29, DashboardComponent_span_29_Template, 2, 0, \"span\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 23);\n      i0.ɵɵelement(31, \"input\", 25);\n      i0.ɵɵtemplate(32, DashboardComponent_span_32_Template, 2, 0, \"span\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 20);\n      i0.ɵɵelement(34, \"input\", 26);\n      i0.ɵɵtemplate(35, DashboardComponent_span_35_Template, 2, 0, \"span\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 23);\n      i0.ɵɵelement(37, \"input\", 27);\n      i0.ɵɵtemplate(38, DashboardComponent_span_38_Template, 2, 0, \"span\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"div\", 23);\n      i0.ɵɵelement(40, \"input\", 28);\n      i0.ɵɵtemplate(41, DashboardComponent_span_41_Template, 2, 0, \"span\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"div\", 20);\n      i0.ɵɵelement(43, \"input\", 29);\n      i0.ɵɵtemplate(44, DashboardComponent_span_44_Template, 2, 0, \"span\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(45, DashboardComponent_div_45_Template, 3, 2, \"div\", 30);\n      i0.ɵɵtemplate(46, DashboardComponent_div_46_Template, 3, 2, \"div\", 31);\n      i0.ɵɵelementStart(47, \"div\", 23)(48, \"button\", 32);\n      i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_48_listener() {\n        return ctx.saveUser();\n      });\n      i0.ɵɵtext(49, \" Sign Up \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(50, \"div\", 33);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(51, \"ngx-loader-spinner\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"div\", 34)(53, \"div\", 12)(54, \"div\", 13)(55, \"div\", 14)(56, \"h1\", 15);\n      i0.ɵɵelement(57, \"img\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(58, \"div\", 17)(59, \"form\", 18)(60, \"div\", 19)(61, \"div\", 20);\n      i0.ɵɵelement(62, \"input\", 27);\n      i0.ɵɵtemplate(63, DashboardComponent_span_63_Template, 2, 0, \"span\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(64, \"div\", 23);\n      i0.ɵɵelement(65, \"input\", 35);\n      i0.ɵɵtemplate(66, DashboardComponent_span_66_Template, 2, 0, \"span\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(67, DashboardComponent_div_67_Template, 3, 2, \"div\", 30);\n      i0.ɵɵtemplate(68, DashboardComponent_div_68_Template, 3, 2, \"div\", 31);\n      i0.ɵɵelementStart(69, \"div\", 23)(70, \"button\", 36);\n      i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_70_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(71, \" Login \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(72, \"p\", 37);\n      i0.ɵɵtext(73, \"or:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(74, \"div\", 38)(75, \"p\");\n      i0.ɵɵtext(76, \"Sign in with:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(77, \"button\", 39);\n      i0.ɵɵelement(78, \"i\", 40);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(79, \"button\", 39);\n      i0.ɵɵelement(80, \"i\", 41);\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵelement(81, \"ngx-loader-spinner\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      let tmp_6_0;\n      let tmp_7_0;\n      let tmp_8_0;\n      let tmp_9_0;\n      let tmp_10_0;\n      let tmp_11_0;\n      let tmp_12_0;\n      let tmp_13_0;\n      let tmp_14_0;\n      let tmp_19_0;\n      let tmp_20_0;\n      let tmp_21_0;\n      let tmp_22_0;\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"formGroup\", ctx.signUpForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(26, _c0, (((tmp_1_0 = ctx.signUpForm.get(\"firstName\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.signUpForm.get(\"firstName\")) == null ? null : tmp_1_0.touched)) && ((tmp_1_0 = ctx.signUpForm.get(\"firstName\")) == null ? null : tmp_1_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (((tmp_2_0 = ctx.signUpForm.get(\"firstName\")) == null ? null : tmp_2_0.dirty) || ((tmp_2_0 = ctx.signUpForm.get(\"firstName\")) == null ? null : tmp_2_0.touched)) && ctx.signUpForm.get(\"firstName\").invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(28, _c0, (((tmp_3_0 = ctx.signUpForm.get(\"lastName\")) == null ? null : tmp_3_0.dirty) || ((tmp_3_0 = ctx.signUpForm.get(\"lastName\")) == null ? null : tmp_3_0.touched)) && ((tmp_3_0 = ctx.signUpForm.get(\"lastName\")) == null ? null : tmp_3_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (((tmp_4_0 = ctx.signUpForm.get(\"lastName\")) == null ? null : tmp_4_0.dirty) || ((tmp_4_0 = ctx.signUpForm.get(\"lastName\")) == null ? null : tmp_4_0.touched)) && ctx.signUpForm.get(\"lastName\").invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(30, _c0, (((tmp_5_0 = ctx.signUpForm.get(\"emailId\")) == null ? null : tmp_5_0.dirty) || ((tmp_5_0 = ctx.signUpForm.get(\"emailId\")) == null ? null : tmp_5_0.touched)) && ((tmp_5_0 = ctx.signUpForm.get(\"emailId\")) == null ? null : tmp_5_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (((tmp_6_0 = ctx.signUpForm.get(\"emailId\")) == null ? null : tmp_6_0.dirty) || ((tmp_6_0 = ctx.signUpForm.get(\"emailId\")) == null ? null : tmp_6_0.touched)) && ctx.signUpForm.get(\"emailId\").invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(32, _c0, (((tmp_7_0 = ctx.signUpForm.get(\"mobile\")) == null ? null : tmp_7_0.dirty) || ((tmp_7_0 = ctx.signUpForm.get(\"mobile\")) == null ? null : tmp_7_0.touched)) && ((tmp_7_0 = ctx.signUpForm.get(\"mobile\")) == null ? null : tmp_7_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (((tmp_8_0 = ctx.signUpForm.get(\"mobile\")) == null ? null : tmp_8_0.dirty) || ((tmp_8_0 = ctx.signUpForm.get(\"mobile\")) == null ? null : tmp_8_0.touched)) && ctx.signUpForm.get(\"mobile\").invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(34, _c0, (((tmp_9_0 = ctx.signUpForm.get(\"userName\")) == null ? null : tmp_9_0.dirty) || ((tmp_9_0 = ctx.signUpForm.get(\"userName\")) == null ? null : tmp_9_0.touched)) && ((tmp_9_0 = ctx.signUpForm.get(\"userName\")) == null ? null : tmp_9_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (((tmp_10_0 = ctx.signUpForm.get(\"userName\")) == null ? null : tmp_10_0.dirty) || ((tmp_10_0 = ctx.signUpForm.get(\"userName\")) == null ? null : tmp_10_0.touched)) && ctx.signUpForm.get(\"userName\").invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(36, _c0, (((tmp_11_0 = ctx.signUpForm.get(\"password\")) == null ? null : tmp_11_0.dirty) || ((tmp_11_0 = ctx.signUpForm.get(\"password\")) == null ? null : tmp_11_0.touched)) && ((tmp_11_0 = ctx.signUpForm.get(\"password\")) == null ? null : tmp_11_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (((tmp_12_0 = ctx.signUpForm.get(\"password\")) == null ? null : tmp_12_0.dirty) || ((tmp_12_0 = ctx.signUpForm.get(\"password\")) == null ? null : tmp_12_0.touched)) && ctx.signUpForm.get(\"password\").invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(38, _c0, (((tmp_13_0 = ctx.signUpForm.get(\"confirmPassword\")) == null ? null : tmp_13_0.dirty) || ((tmp_13_0 = ctx.signUpForm.get(\"confirmPassword\")) == null ? null : tmp_13_0.touched)) && ((tmp_13_0 = ctx.signUpForm.get(\"confirmPassword\")) == null ? null : tmp_13_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (((tmp_14_0 = ctx.signUpForm.get(\"confirmPassword\")) == null ? null : tmp_14_0.dirty) || ((tmp_14_0 = ctx.signUpForm.get(\"confirmPassword\")) == null ? null : tmp_14_0.touched)) && ctx.signUpForm.get(\"confirmPassword\").invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.onLoadOnsignUp && ctx.successOnsignUp);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.onLoadOnsignUp && !ctx.successOnsignUp);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.signUpForm.invalid);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(40, _c0, (((tmp_19_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_19_0.dirty) || ((tmp_19_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_19_0.touched)) && ((tmp_19_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_19_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (((tmp_20_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_20_0.dirty) || ((tmp_20_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_20_0.touched)) && ctx.loginForm.get(\"userName\").invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(42, _c0, (((tmp_21_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_21_0.dirty) || ((tmp_21_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_21_0.touched)) && ((tmp_21_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_21_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (((tmp_22_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_22_0.dirty) || ((tmp_22_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_22_0.touched)) && ctx.loginForm.get(\"password\").invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.onLoad && ctx.success);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.onLoad && !ctx.success);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i1.NgxLoaderSpinnerComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","DashboardComponent","constructor","spinnerService","router","userService","userName","required","password","firstName","lastName","mobile","emailId","confirmPassword","localStorage","getItem","ngOnInit","login","onLoad","show","loginForm","value","subscribe","response","success","alertHeading","message","setTimeout","errorMessage","successMessage","$","modal","navigate","hide","err","console","error","JSON","stringify","body","saveUser","onLoadOnsignUp","signUpForm","successOnsignUp","alertHeadingOnsignUp","errorMessageOnsignUp","successMessageOnsignUp","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\LENOVO\\Desktop\\clinicalPathways-angular\\client\\src\\components\\dashboard\\dashboard.component.ts","C:\\Users\\LENOVO\\Desktop\\clinicalPathways-angular\\client\\src\\components\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/services/user.service';\ndeclare var $: any;\nimport { NgxLoaderSpinnerService } from 'ngx-loader-spinner';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n  constructor(\n    private spinnerService: NgxLoaderSpinnerService,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  loginForm = new FormGroup({\n    userName: new FormControl(null, [Validators.required]),\n    password: new FormControl(null, [Validators.required]),\n  });\n\n  signUpForm = new FormGroup({\n    firstName: new FormControl(null, [Validators.required]),\n    lastName: new FormControl(null, [Validators.required]),\n    mobile: new FormControl(null, [Validators.required]),\n    emailId: new FormControl(null, [Validators.required]),\n    userName: new FormControl(null, [Validators.required]),\n    password: new FormControl(null, [Validators.required]),\n    confirmPassword: new FormControl(null, [Validators.required]),\n  });\n\n  errorMessage: string = '';\n  successMessage: string = '';\n  alertHeading: string = '';\n  success: boolean = false;\n\n  errorMessageOnsignUp: string = '';\n  successMessageOnsignUp: string = '';\n  alertHeadingOnsignUp: string = '';\n  successOnsignUp: boolean = false;\n\n  onLoad: boolean = true;\n  onLoadOnsignUp: boolean = true;\n\n  isLoggedIn = localStorage.getItem('isAuthenticated');\n\n  ngOnInit(): void {}\n\n  // login\n  login() {\n    this.onLoad = false;\n    try {\n      this.spinnerService.show();\n      this.userService.login(this.loginForm.value).subscribe(\n        (response: any) => {\n          this.success = true;\n          this.alertHeading = response.message;\n\n          setTimeout(() => {\n            this.errorMessage = '';\n            this.successMessage = '';\n            this.alertHeading = '';\n            this.success = false;\n            this.onLoad = true;\n          }, 3000);\n\n          setTimeout(() => {\n            $('#loginModal').modal('hide');\n            this.router.navigate(['/inner-dashboard']);\n            this.spinnerService.hide();\n          }, 1500);\n        },\n        (err: any) => {\n          console.error(`Error [login]:  , ${JSON.stringify(err.error)}`);\n          this.alertHeading = err.error.message;\n          this.errorMessage = err.error.body;\n          this.spinnerService.hide();\n        }\n      );\n    } catch (err: any) {\n      console.error(`Error [login]:  , ${JSON.stringify(err)}`);\n      this.alertHeading = err.error.message;\n      this.errorMessage = err.error.body;\n      this.spinnerService.hide();\n    }\n  }\n\n  // Signup and create a user\n  saveUser() {\n    this.onLoadOnsignUp = false;\n    this.spinnerService.show();\n    try {\n      this.userService.saveUser([this.signUpForm.value]).subscribe(\n        (response: any) => {\n          this.successOnsignUp = true;\n          this.alertHeadingOnsignUp = response.message;\n\n          setTimeout(() => {\n            this.errorMessageOnsignUp = '';\n            this.successMessageOnsignUp = '';\n            this.alertHeadingOnsignUp = '';\n            this.successOnsignUp = false;\n            this.onLoadOnsignUp = true;\n          }, 3000);\n\n          setTimeout(() => {\n            $('#signUpModal').modal('hide');\n            this.spinnerService.hide();\n          }, 1500);\n        },\n        (err: any) => {\n          console.error(`Error [saveUser]:  , ${JSON.stringify(err.error)}`);\n          this.alertHeadingOnsignUp = err.error.message;\n          this.errorMessageOnsignUp = err.error.body;\n          this.spinnerService.hide();\n        }\n      );\n    } catch (err: any) {\n      console.error(`Error [saveUser]:  , ${JSON.stringify(err)}`);\n      this.alertHeadingOnsignUp = err.error.message;\n      this.errorMessageOnsignUp = err.error.body;\n      this.spinnerService.hide();\n    }\n  }\n}\n","<div id=\"home\" class=\"carousel slide carousel-fade\" data-bs-ride=\"carousel\">\n  <div class=\"carousel-inner\">\n    <div class=\"carousel-item active\">\n      <img class=\"w-100\" src=\"assets/img/carousel-1.jpg\" alt=\"Image\" />\n      <div\n        class=\"carousel-caption d-flex flex-column align-items-center justify-content-center\"\n      >\n        <div class=\"p-3\" style=\"max-width: 900px\">\n          <h5 class=\"text-white text-uppercase mb-3 animated slideInDown\">\n            Clinical pathways\n          </h5>\n          <h1 class=\"display-1 text-white mb-md-4 animated zoomIn\">\n            Coming Soon!\n          </h1>\n          <a\n            class=\"btn btn-primary py-md-3 px-md-5 me-3 animated slideInLeft\"\n            data-bs-toggle=\"modal\"\n            data-bs-target=\"#loginModal\"\n            ><i class=\"fa fa-user\"></i> Login</a\n          >\n          <a\n            class=\"btn btn-outline-light py-md-3 px-md-5 animated slideInRight\"\n            data-bs-toggle=\"modal\"\n            data-bs-target=\"#signUpModal\"\n          >\n            Sign up</a\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Full Screen Search Start -->\n<div class=\"modal\" id=\"signUpModal\" role=\"dialog\">\n  <div class=\"modal-dialog modal-lg\" data-wow-delay=\"0.1s\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"d-flex align-items-center justify-content-center\">\n          <img src=\"assets/img/logo.png\" style=\"height: 15%; width: 15%\" />\n        </h1>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"signUpForm\">\n          <div class=\"row g-3\">\n            <div class=\"col-xl-12\">\n              <input\n                type=\"text\"\n                class=\"form-control bg-light border-0\"\n                placeholder=\"First Name *\"\n                style=\"height: 55px\"\n                formControlName=\"firstName\"\n                [ngClass]=\"{\n                  'input-error':\n                    (signUpForm.get('firstName')?.dirty ||\n                      signUpForm.get('firstName')?.touched) &&\n                    signUpForm.get('firstName')?.invalid\n                }\"\n              />\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  (signUpForm.get('firstName')?.dirty ||\n                    signUpForm.get('firstName')?.touched) &&\n                  signUpForm.get('firstName')!.invalid\n                \"\n                >Firstname must meet validation criteria.\n              </span>\n            </div>\n            <div class=\"col-12\">\n              <input\n                type=\"email\"\n                class=\"form-control bg-light border-0\"\n                placeholder=\"Last Name *\"\n                style=\"height: 55px\"\n                formControlName=\"lastName\"\n                [ngClass]=\"{\n                  'input-error':\n                    (signUpForm.get('lastName')?.dirty ||\n                      signUpForm.get('lastName')?.touched) &&\n                    signUpForm.get('lastName')?.invalid\n                }\"\n              />\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  (signUpForm.get('lastName')?.dirty ||\n                    signUpForm.get('lastName')?.touched) &&\n                  signUpForm.get('lastName')!.invalid\n                \"\n                >Lastname must meet validation criteria.\n              </span>\n            </div>\n            <div class=\"col-12\">\n              <input\n                type=\"email\"\n                class=\"form-control bg-light border-0\"\n                placeholder=\"Email ID *\"\n                style=\"height: 55px\"\n                formControlName=\"emailId\"\n                [ngClass]=\"{\n                  'input-error':\n                    (signUpForm.get('emailId')?.dirty ||\n                      signUpForm.get('emailId')?.touched) &&\n                    signUpForm.get('emailId')?.invalid\n                }\"\n              />\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  (signUpForm.get('emailId')?.dirty ||\n                    signUpForm.get('emailId')?.touched) &&\n                  signUpForm.get('emailId')!.invalid\n                \"\n                >EmailId must meet validation criteria.\n              </span>\n            </div>\n            <div class=\"col-xl-12\">\n              <input\n                type=\"text\"\n                class=\"form-control bg-light border-0\"\n                placeholder=\"Mobile *\"\n                style=\"height: 55px\"\n                formControlName=\"mobile\"\n                [ngClass]=\"{\n                  'input-error':\n                    (signUpForm.get('mobile')?.dirty ||\n                      signUpForm.get('mobile')?.touched) &&\n                    signUpForm.get('mobile')?.invalid\n                }\"\n              />\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  (signUpForm.get('mobile')?.dirty ||\n                    signUpForm.get('mobile')?.touched) &&\n                  signUpForm.get('mobile')!.invalid\n                \"\n                >Mobile must meet validation criteria.\n              </span>\n            </div>\n            <div class=\"col-12\">\n              <input\n                type=\"text\"\n                class=\"form-control bg-light border-0\"\n                placeholder=\"Username *\"\n                formControlName=\"userName\"\n                style=\"height: 55px\"\n                [ngClass]=\"{\n                  'input-error':\n                    (signUpForm.get('userName')?.dirty ||\n                      signUpForm.get('userName')?.touched) &&\n                    signUpForm.get('userName')?.invalid\n                }\"\n              />\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  (signUpForm.get('userName')?.dirty ||\n                    signUpForm.get('userName')?.touched) &&\n                  signUpForm.get('userName')!.invalid\n                \"\n                >Username must meet validation criteria.\n              </span>\n            </div>\n            <div class=\"col-12\">\n              <input\n                type=\"email\"\n                class=\"form-control bg-light border-0\"\n                placeholder=\"Password *\"\n                style=\"height: 55px\"\n                formControlName=\"password\"\n                [ngClass]=\"{\n                  'input-error':\n                    (signUpForm.get('password')?.dirty ||\n                      signUpForm.get('password')?.touched) &&\n                    signUpForm.get('password')?.invalid\n                }\"\n              />\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  (signUpForm.get('password')?.dirty ||\n                    signUpForm.get('password')?.touched) &&\n                  signUpForm.get('password')!.invalid\n                \"\n                >Password must meet validation criteria.\n              </span>\n            </div>\n            <div class=\"col-xl-12\">\n              <input\n                type=\"text\"\n                class=\"form-control bg-light border-0\"\n                placeholder=\"Confirm Password *\"\n                style=\"height: 55px\"\n                formControlName=\"confirmPassword\"\n                [ngClass]=\"{\n                  'input-error':\n                    (signUpForm.get('confirmPassword')?.dirty ||\n                      signUpForm.get('confirmPassword')?.touched) &&\n                    signUpForm.get('confirmPassword')?.invalid\n                }\"\n              />\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  (signUpForm.get('confirmPassword')?.dirty ||\n                    signUpForm.get('confirmPassword')?.touched) &&\n                  signUpForm.get('confirmPassword')!.invalid\n                \"\n                >Confirm Password must meet validation criteria.\n              </span>\n            </div>\n            <div\n              class=\"alert alert-success\"\n              *ngIf=\"!onLoadOnsignUp && successOnsignUp\"\n            >\n              <span\n                >{{ alertHeadingOnsignUp }}! {{ successMessageOnsignUp }}</span\n              >\n            </div>\n            <div\n              class=\"alert alert-danger\"\n              *ngIf=\"!onLoadOnsignUp && !successOnsignUp\"\n            >\n              <span\n                >{{ alertHeadingOnsignUp }}! {{ errorMessageOnsignUp }}</span\n              >\n            </div>\n            <div class=\"col-12\">\n              <button\n                class=\"btn btn-dark w-100 py-3\"\n                type=\"submit\"\n                [disabled]=\"signUpForm.invalid\"\n                (click)=\"saveUser()\"\n              >\n                Sign Up\n              </button>\n            </div>\n          </div>\n        </form>\n        <div class=\"modal-footer\"></div>\n      </div>\n    </div>\n  </div>\n  <ngx-loader-spinner></ngx-loader-spinner>\n</div>\n<!-- Full Screen Search End -->\n<!-- Full Screen Search Start -->\n\n<div class=\"modal\" id=\"loginModal\" role=\"dialog\">\n  <div class=\"modal-dialog modal-lg\" data-wow-delay=\"0.1s\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"d-flex align-items-center justify-content-center\">\n          <img src=\"assets/img/logo.png\" style=\"height: 15%; width: 15%\" />\n        </h1>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"loginForm\">\n          <div class=\"row g-3\">\n            <div class=\"col-xl-12\">\n              <input\n                type=\"text\"\n                class=\"form-control bg-light border-0\"\n                placeholder=\"Username *\"\n                style=\"height: 55px\"\n                formControlName=\"userName\"\n                [ngClass]=\"{\n                  'input-error':\n                    (loginForm.get('userName')?.dirty ||\n                      loginForm.get('userName')?.touched) &&\n                    loginForm.get('userName')?.invalid\n                }\"\n              />\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  (loginForm.get('userName')?.dirty ||\n                    loginForm.get('userName')?.touched) &&\n                  loginForm.get('userName')!.invalid\n                \"\n                >Username must meet validation criteria.\n              </span>\n            </div>\n            <div class=\"col-12\">\n              <input\n                type=\"password\"\n                placeholder=\"Password *\"\n                class=\"form-control bg-light border-0\"\n                style=\"height: 55px\"\n                formControlName=\"password\"\n                [ngClass]=\"{\n                  'input-error':\n                    (loginForm.get('password')?.dirty ||\n                      loginForm.get('password')?.touched) &&\n                    loginForm.get('password')?.invalid\n                }\"\n              />\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  (loginForm.get('password')?.dirty ||\n                    loginForm.get('password')?.touched) &&\n                  loginForm.get('password')!.invalid\n                \"\n                >Password must meet validation criteria.\n              </span>\n            </div>\n\n            <div class=\"alert alert-success\" *ngIf=\"!onLoad && success\">\n              <span>{{ alertHeading }}! {{ successMessage }}</span>\n            </div>\n            <div class=\"alert alert-danger\" *ngIf=\"!onLoad && !success\">\n              <span>{{ alertHeading }}! {{ errorMessage }}</span>\n            </div>\n            <div class=\"col-12\">\n              <button\n                (click)=\"login()\"\n                class=\"btn btn-dark w-100 py-3\"\n                [disabled]=\"loginForm.invalid\"\n              >\n                Login\n              </button>\n            </div>\n            <p class=\"text-center\" style=\"font-weight: bold\">or:</p>\n            <div class=\"text-center mb-3\">\n              <p>Sign in with:</p>\n\n              <button type=\"button\" class=\"btn btn-link btn-floating mx-1\">\n                <i class=\"fab fa-google\"></i>\n              </button>\n\n              <button type=\"button\" class=\"btn btn-link btn-floating mx-1\">\n                <i class=\"fab fa-apple\"></i>\n              </button>\n            </div>\n          </div>\n        </form>\n        <!-- <div class=\"modal-footer\"></div> -->\n      </div>\n    </div>\n  </div>\n  <ngx-loader-spinner></ngx-loader-spinner>\n</div>\n<!-- Full Screen Search End -->\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}