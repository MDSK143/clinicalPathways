{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SidebarComponent = class SidebarComponent {\n  constructor(router, spinnerService) {\n    this.router = router;\n    this.spinnerService = spinnerService;\n    this.currentPage = '';\n    this.isAdmin = localStorage.getItem('isAdmin');\n  }\n  ngOnInit() {\n    this.currentPage = this.router.url;\n    this.getUserByQuery();\n  }\n  //Route to desired screen\n  routePage(pageToRoute) {\n    this.router.navigate([`/${pageToRoute}`]);\n  }\n  //Logout\n  logout() {\n    this.router.navigate([`/`]);\n    localStorage.setItem('isAuthenticated', 'false');\n  }\n  getUserByQuery() {\n    this.spinnerService.show();\n    try {\n      this.userService.getUserByQuery(`_id=${localStorage.getItem('userId')}`).subscribe(response => {\n        this.spinnerService.hide();\n      }, err => {\n        console.error(`Error [saveUser]:  , ${JSON.stringify(err.error)}`);\n        this.spinnerService.hide();\n      });\n    } catch (err) {\n      console.error(`Error [saveUser]:  , ${JSON.stringify(err)}`);\n      this.spinnerService.hide();\n    }\n  }\n};\nSidebarComponent = __decorate([Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})], SidebarComponent);\nexport { SidebarComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAC3BC,YAAoBC,MAAc,EACxBC,cAAuC;IAD7B,WAAM,GAAND,MAAM;IAChB,mBAAc,GAAdC,cAAc;IAExB,gBAAW,GAAW,EAAE;IACxB,YAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAHY;EAKrDC,QAAQ;IACN,IAAI,CAACC,WAAW,GAAG,IAAI,CAACL,MAAM,CAACM,GAAG;IAClC,IAAI,CAACC,cAAc,EAAE;EACvB;EAEA;EACAC,SAAS,CAACC,WAAgB;IACxB,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,IAAID,WAAW,EAAE,CAAC,CAAC;EAC3C;EAEA;EACAE,MAAM;IACJ,IAAI,CAACX,MAAM,CAACU,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3BR,YAAY,CAACU,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC;EAClD;EAEAL,cAAc;IACZ,IAAI,CAACN,cAAc,CAACY,IAAI,EAAE;IAC1B,IAAI;MACF,IAAI,CAACC,WAAW,CACbP,cAAc,CAAC,OAAOL,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CACvDY,SAAS,CACPC,QAAa,IAAI;QAChB,IAAI,CAACf,cAAc,CAACgB,IAAI,EAAE;MAC5B,CAAC,EACAC,GAAQ,IAAI;QACXC,OAAO,CAACC,KAAK,CAAC,wBAAwBC,IAAI,CAACC,SAAS,CAACJ,GAAG,CAACE,KAAK,CAAC,EAAE,CAAC;QAClE,IAAI,CAACnB,cAAc,CAACgB,IAAI,EAAE;MAC5B,CAAC,CACF;KACJ,CAAC,OAAOC,GAAQ,EAAE;MACjBC,OAAO,CAACC,KAAK,CAAC,wBAAwBC,IAAI,CAACC,SAAS,CAACJ,GAAG,CAAC,EAAE,CAAC;MAC5D,IAAI,CAACjB,cAAc,CAACgB,IAAI,EAAE;;EAE9B;CACD;AA1CYnB,gBAAgB,eAL5BD,SAAS,CAAC;EACT0B,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACW3B,gBAAgB,CA0C5B;SA1CYA,gBAAgB","names":["Component","SidebarComponent","constructor","router","spinnerService","localStorage","getItem","ngOnInit","currentPage","url","getUserByQuery","routePage","pageToRoute","navigate","logout","setItem","show","userService","subscribe","response","hide","err","console","error","JSON","stringify","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\LENOVO\\Desktop\\clinicalPathways-angular\\client\\src\\components\\sidebar\\sidebar.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css'],\n})\nexport class SidebarComponent {\n  constructor(private router: Router,\n    private spinnerService: NgxLoaderSpinnerService,) {}\n\n  currentPage: string = '';\n  isAdmin = localStorage.getItem('isAdmin');\n\n  ngOnInit() {\n    this.currentPage = this.router.url;\n    this.getUserByQuery();\n  }\n\n  //Route to desired screen\n  routePage(pageToRoute: any) {\n    this.router.navigate([`/${pageToRoute}`]);\n  }\n\n  //Logout\n  logout() {\n    this.router.navigate([`/`]);\n    localStorage.setItem('isAuthenticated', 'false');\n  }\n\n  getUserByQuery() {\n    this.spinnerService.show();\n    try {\n      this.userService\n        .getUserByQuery(`_id=${localStorage.getItem('userId')}`)\n        .subscribe(\n          (response: any) => {\n            this.spinnerService.hide();\n          },\n          (err: any) => {\n            console.error(`Error [saveUser]:  , ${JSON.stringify(err.error)}`);\n            this.spinnerService.hide();\n          }\n        );\n    } catch (err: any) {\n      console.error(`Error [saveUser]:  , ${JSON.stringify(err)}`);\n      this.spinnerService.hide();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}