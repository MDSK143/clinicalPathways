{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet DashboardComponent = class DashboardComponent {\n  constructor(router, userService) {\n    this.router = router;\n    this.userService = userService;\n    this.loginForm = new FormGroup({\n      userName: new FormControl(null, [Validators.required]),\n      password: new FormControl(null, [Validators.required])\n    });\n    this.signUpForm = new FormGroup({\n      firstName: new FormControl(null, [Validators.required]),\n      lastName: new FormControl(null, [Validators.required]),\n      mobile: new FormControl(null, [Validators.required]),\n      emailId: new FormControl(null, [Validators.required]),\n      userName: new FormControl(null, [Validators.required]),\n      password: new FormControl(null, [Validators.required]),\n      confirmPassword: new FormControl(null, [Validators.required])\n    });\n    this.errorMessage = '';\n    this.successMessage = '';\n    this.alertHeading = '';\n    this.success = false;\n    this.errorMessageOnsignUp = '';\n    this.successMessageOnsignUp = '';\n    this.alertHeadingOnsignUp = '';\n    this.successOnsignUp = false;\n    this.onLoad = true;\n    this.onLoadOnsignUp = true;\n  }\n  ngOnInit() {}\n  // login\n  login() {\n    this.onLoad = false;\n    try {\n      this.userService.login(this.loginForm.value).subscribe(response => {\n        this.success = true;\n        this.alertHeading = response.message;\n        setTimeout(() => {\n          $('#loginModal').modal('hide');\n          this.router.navigate(['/inner-dashboard']);\n        }, 1500);\n      }, err => {\n        console.error(`Error [login]:  , ${JSON.stringify(err.error)}`);\n        this.alertHeading = err.error.message;\n        this.errorMessage = err.error.body;\n      });\n    } catch (err) {\n      console.error(`Error [login]:  , ${JSON.stringify(err)}`);\n      this.alertHeading = err.error.message;\n      this.errorMessage = err.error.body;\n    }\n  }\n  // Signup and create a user\n  saveUser() {\n    this.onLoadOnsignUp = false;\n    try {\n      this.userService.saveUser(this.signUpForm.value).subscribe(response => {\n        this.successOnsignUp = true;\n        this.alertHeadingOnsignUp = response.message;\n        setTimeout(() => {\n          $('#signUpModal').modal('hide');\n        }, 1500);\n      }, err => {\n        console.error(`Error [saveUser]:  , ${JSON.stringify(err.error)}`);\n        this.alertHeadingOnsignUp = err.error.message;\n        this.errorMessageOnsignUp = err.error.body;\n      });\n    } catch (err) {\n      console.error(`Error [saveUser]:  , ${JSON.stringify(err)}`);\n      this.alertHeadingOnsignUp = err.error.message;\n      this.errorMessageOnsignUp = err.error.body;\n    }\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","Validators","DashboardComponent","constructor","router","userService","userName","required","password","firstName","lastName","mobile","emailId","confirmPassword","ngOnInit","login","onLoad","loginForm","value","subscribe","response","success","alertHeading","message","setTimeout","$","modal","navigate","err","console","error","JSON","stringify","errorMessage","body","saveUser","onLoadOnsignUp","signUpForm","successOnsignUp","alertHeadingOnsignUp","errorMessageOnsignUp","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\LENOVO\\Desktop\\clinicalPathways-angular\\client\\src\\components\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/services/user.service';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n  constructor(private router: Router, private userService: UserService) {}\n\n  loginForm = new FormGroup({\n    userName: new FormControl(null, [Validators.required]),\n    password: new FormControl(null, [Validators.required]),\n  });\n\n  signUpForm = new FormGroup({\n    firstName: new FormControl(null, [Validators.required]),\n    lastName: new FormControl(null, [Validators.required]),\n    mobile: new FormControl(null, [Validators.required]),\n    emailId: new FormControl(null, [Validators.required]),\n    userName: new FormControl(null, [Validators.required]),\n    password: new FormControl(null, [Validators.required]),\n    confirmPassword: new FormControl(null, [Validators.required]),\n  });\n\n  errorMessage: string = '';\n  successMessage: string = '';\n  alertHeading: string = '';\n  success: boolean = false;\n\n  errorMessageOnsignUp: string = '';\n  successMessageOnsignUp: string = '';\n  alertHeadingOnsignUp: string = '';\n  successOnsignUp: boolean = false;\n\n  onLoad: boolean = true;\n  onLoadOnsignUp: boolean = true;\n\n  ngOnInit(): void {}\n\n  // login\n  login() {\n    this.onLoad = false;\n    try {\n      this.userService.login(this.loginForm.value).subscribe(\n        (response: any) => {\n          this.success = true;\n          this.alertHeading = response.message;\n          setTimeout(() => {\n            $('#loginModal').modal('hide');\n            this.router.navigate(['/inner-dashboard']);\n          }, 1500);\n        },\n        (err: any) => {\n          console.error(`Error [login]:  , ${JSON.stringify(err.error)}`);\n          this.alertHeading = err.error.message;\n          this.errorMessage = err.error.body;\n        }\n      );\n    } catch (err: any) {\n      console.error(`Error [login]:  , ${JSON.stringify(err)}`);\n      this.alertHeading = err.error.message;\n      this.errorMessage = err.error.body;\n    }\n  }\n\n  // Signup and create a user\n  saveUser() {\n    this.onLoadOnsignUp = false;\n    try {\n      this.userService.saveUser(this.signUpForm.value).subscribe(\n        (response: any) => {\n          this.successOnsignUp = true;\n          this.alertHeadingOnsignUp = response.message;\n          setTimeout(() => {\n            $('#signUpModal').modal('hide');\n          }, 1500);\n        },\n        (err: any) => {\n          console.error(`Error [saveUser]:  , ${JSON.stringify(err.error)}`);\n          this.alertHeadingOnsignUp = err.error.message;\n          this.errorMessageOnsignUp = err.error.body;\n        }\n      );\n    } catch (err: any) {\n      console.error(`Error [saveUser]:  , ${JSON.stringify(err)}`);\n      this.alertHeadingOnsignUp = err.error.message;\n      this.errorMessageOnsignUp = err.error.body;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}